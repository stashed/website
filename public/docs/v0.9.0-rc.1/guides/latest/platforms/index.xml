<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Platforms | Stash on Backup your Kubernetes Stateful Applications</title><link>https://stash.run/docs/v0.9.0-rc.1/guides/latest/platforms/</link><description>Recent content in Platforms | Stash on Backup your Kubernetes Stateful Applications</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://stash.run/docs/v0.9.0-rc.1/guides/latest/platforms/index.xml" rel="self" type="application/rss+xml"/><item><title>AKS | Stash</title><link>https://stash.run/docs/v0.9.0-rc.1/guides/latest/platforms/aks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://stash.run/docs/v0.9.0-rc.1/guides/latest/platforms/aks/</guid><description>Using Stash with Azure Kubernetes Service (AKS) This guide will show you how to use Stash to backup and restore volumes of a Kubernetes workload running in Azure Kubernetes Service (AKS). Here, we are going to backup a volume of a Deployment into Azure Blob Storage. Then, we are going to show how to restore this backed up data into a volume of another Deployment.
Before You Begin At first, you need to have an AKS cluster.</description></item><item><title>EKS | Stash</title><link>https://stash.run/docs/v0.9.0-rc.1/guides/latest/platforms/eks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://stash.run/docs/v0.9.0-rc.1/guides/latest/platforms/eks/</guid><description>Using Stash with Amazon EKS This guide will show you how to use Stash to backup and restore volumes of a Kubernetes workload running in Amazon Elastic Kubernetes Service (Amazon EKS). Here, we are going to backup a volume of a Deployment into AWS S3 bucket. Then, we are going to show how to restore this backed up data into a volume of another Deployment.
Before You Begin At first, you need to have an EKS cluster.</description></item><item><title>GKE | Stash</title><link>https://stash.run/docs/v0.9.0-rc.1/guides/latest/platforms/gke/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://stash.run/docs/v0.9.0-rc.1/guides/latest/platforms/gke/</guid><description>Using Stash with Google Kubernetes Engine (GKE) This guide will show you how to use Stash to backup and restore volumes of a Kubernetes workload running in Google Kubernetes Engine (GKE). Here, we are going to backup a volume of a Deployment into GCS Bucket. Then, we are going to show how to restore this backed up data into a volume of another Deployment.
Before You Begin At first, you need to have a Kubernetes cluster in the Google Cloud Platform.</description></item><item><title>Minio | Stash</title><link>https://stash.run/docs/v0.9.0-rc.1/guides/latest/platforms/minio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://stash.run/docs/v0.9.0-rc.1/guides/latest/platforms/minio/</guid><description>Using Stash with TLS secured Minio Server Minio is an open-source object storage server compatible with AWS S3 cloud storage service. This guide will show you how to use Stash to backup and restore volumes of a Kubernetes workload in Minio backend. Here, we are going to backup a volume of a Deployment into a Minio bucket. Then, we are going to show how to restore this backed up data into a volume of another Deployment.</description></item><item><title>Rook | Stash</title><link>https://stash.run/docs/v0.9.0-rc.1/guides/latest/platforms/rook/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://stash.run/docs/v0.9.0-rc.1/guides/latest/platforms/rook/</guid><description>Using Stash with Rook Managed Ceph Storage This guide will show you how to use Stash to backup and restore volumes of a Kubernetes workload in Rook managed Ceph storage. Here, we are going to backup a volume of a Deployment into AWS S3 compatible Ceph Object Storage. Then, we are going to show how to restore this volume into a PersistentVolumeClaim of Ceph Object Storage. We are going to also re-deploy deployment using this recovered volume.</description></item></channel></rss>