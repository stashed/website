<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Monitoring | Stash on Backup your Kubernetes Stateful Applications</title><link>https://stash.run/docs/v0.9.0-rc.4/guides/v1alpha1/monitoring/</link><description>Recent content in Monitoring | Stash on Backup your Kubernetes Stateful Applications</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://stash.run/docs/v0.9.0-rc.4/guides/v1alpha1/monitoring/index.xml" rel="self" type="application/rss+xml"/><item><title>Builtin Prometheus | Stash</title><link>https://stash.run/docs/v0.9.0-rc.4/guides/v1alpha1/monitoring/builtin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://stash.run/docs/v0.9.0-rc.4/guides/v1alpha1/monitoring/builtin/</guid><description>Monitoring Stash with builtin Prometheus This tutorial will show you how to configure builtin Prometheus scraper to monitor Stash backup and recovery operations as well as Stash operator.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind.
To keep Prometheus resources isolated, we are going to use a separate namespace to deploy Prometheus server.</description></item><item><title>CoreOS Prometheus Operator | Stash</title><link>https://stash.run/docs/v0.9.0-rc.4/guides/v1alpha1/monitoring/coreos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://stash.run/docs/v0.9.0-rc.4/guides/v1alpha1/monitoring/coreos/</guid><description>Monitoring Using CoreOS Prometheus Operator CoreOS prometheus-operator provides simple and Kubernetes native way to deploy and configure Prometheus server. This tutorial will show you how to use Prometheus operator for monitoring Stash.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind.</description></item><item><title>Monitoring Overview | Stash</title><link>https://stash.run/docs/v0.9.0-rc.4/guides/v1alpha1/monitoring/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://stash.run/docs/v0.9.0-rc.4/guides/v1alpha1/monitoring/overview/</guid><description>New to Stash? Please start here.
Monitoring Stash Stash has native support for monitoring via Prometheus. You can use builtin Prometheus scraper or CoreOS Prometheus Operator to monitor Stash. This tutorial will show you how this monitoring works with Stash and how to enable them.
Overview Stash uses Prometheus PushGateway to export the metrics for backup &amp;amp; recovery operations. Following diagram shows the logical structure of Stash monitoring flow.</description></item><item><title>Use Grafana | Stash</title><link>https://stash.run/docs/v0.9.0-rc.4/guides/v1alpha1/monitoring/grafana/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://stash.run/docs/v0.9.0-rc.4/guides/v1alpha1/monitoring/grafana/</guid><description>Use Grafana Dashboard Grafana provides an elegant graphical user interface to visualize data. You can create beautiful dashboard easily with a meaningful representation of your Prometheus metrics.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind.
You must have a Stash instant running with monitoring enabled.</description></item></channel></rss>